# Generated by Django 5.2.3 on 2025-06-16 04:24

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0002_category_alter_course_options_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='category',
            options={'ordering': ['name'], 'verbose_name_plural': 'Categories'},
        ),
        migrations.AlterModelOptions(
            name='course',
            options={'ordering': ['-created_at'], 'verbose_name': 'Course', 'verbose_name_plural': 'Courses'},
        ),
        migrations.AlterModelOptions(
            name='enrollment',
            options={'verbose_name': 'Enrollment', 'verbose_name_plural': 'Enrollments'},
        ),
        migrations.AlterModelOptions(
            name='lecture',
            options={'ordering': ['order'], 'verbose_name': 'Lecture', 'verbose_name_plural': 'Lectures'},
        ),
        migrations.AlterModelOptions(
            name='review',
            options={'verbose_name': 'Review', 'verbose_name_plural': 'Reviews'},
        ),
        migrations.AlterModelOptions(
            name='section',
            options={'ordering': ['order'], 'verbose_name': 'Section', 'verbose_name_plural': 'Sections'},
        ),
        migrations.AddField(
            model_name='category',
            name='icon',
            field=models.CharField(blank=True, help_text="Font Awesome icon class (e.g. 'fas fa-code')", max_length=50),
        ),
        migrations.AddField(
            model_name='category',
            name='slug',
            field=models.SlugField(default='', max_length=100, unique=True),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='course',
            name='certificate_template',
            field=models.ImageField(blank=True, help_text='Certificate template (optional)', null=True, upload_to='certificate_templates/'),
        ),
        migrations.AddField(
            model_name='course',
            name='featured',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='course',
            name='has_certificate',
            field=models.BooleanField(default=True, verbose_name='Include certificate'),
        ),
        migrations.AddField(
            model_name='course',
            name='objectives',
            field=models.TextField(blank=True, help_text='What will students learn? (Bullet points recommended)'),
        ),
        migrations.AddField(
            model_name='course',
            name='requirements',
            field=models.TextField(blank=True, help_text='Prerequisites or requirements for this course'),
        ),
        migrations.AddField(
            model_name='course',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='enrollment',
            name='completed_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='enrollment',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='instructor',
            name='profile_picture',
            field=models.ImageField(blank=True, null=True, upload_to='instructor_profiles/'),
        ),
        migrations.AddField(
            model_name='lecture',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='lecture',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='lecture',
            name='duration_minutes',
            field=models.PositiveIntegerField(default=0, help_text='Duration in minutes'),
        ),
        migrations.AddField(
            model_name='lecture',
            name='is_preview',
            field=models.BooleanField(default=False, help_text='Available for preview without enrollment'),
        ),
        migrations.AddField(
            model_name='lecture',
            name='lecture_type',
            field=models.CharField(choices=[('video', 'Video'), ('article', 'Article'), ('quiz', 'Quiz'), ('assignment', 'Assignment')], default='video', max_length=20),
        ),
        migrations.AddField(
            model_name='lecture',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='lecture',
            name='video_url',
            field=models.URLField(blank=True, help_text='External video URL (YouTube, Vimeo, etc.)', null=True),
        ),
        migrations.AddField(
            model_name='review',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='section',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='course',
            name='difficulty',
            field=models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('all', 'All Levels')], default='beginner', max_length=12),
        ),
        migrations.AlterField(
            model_name='course',
            name='language',
            field=models.CharField(choices=[('so', 'Somali'), ('en', 'English'), ('ar', 'Arabic')], default='so', max_length=5),
        ),
        migrations.AlterField(
            model_name='course',
            name='price',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=8, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='lecture',
            name='content',
            field=models.FileField(blank=True, help_text='Video, PDF, etc.', null=True, upload_to='lecture_content/'),
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issued_at', models.DateTimeField(auto_now_add=True)),
                ('certificate_id', models.CharField(max_length=20, unique=True)),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='certificates/')),
                ('enrollment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='certificate', to='users.enrollment')),
            ],
            options={
                'verbose_name': 'Certificate',
                'verbose_name_plural': 'Certificates',
            },
        ),
        migrations.CreateModel(
            name='LectureResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to='lecture_resources/')),
                ('order', models.PositiveIntegerField()),
                ('lecture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='users.lecture')),
            ],
            options={
                'verbose_name': 'Resource',
                'verbose_name_plural': 'Resources',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='CompletedLecture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed_at', models.DateTimeField(auto_now_add=True)),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='completed_lectures', to='users.enrollment')),
                ('lecture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.lecture')),
            ],
            options={
                'verbose_name': 'Completed Lecture',
                'verbose_name_plural': 'Completed Lectures',
                'unique_together': {('enrollment', 'lecture')},
            },
        ),
    ]
